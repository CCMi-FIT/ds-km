Ideas behind the data model

1 It consists of a large core that is applicable everywhere, and localizations.
2 It consists of chapters of questions that belong together
   * Each chapter could be presented as a tab in a user interface for the questionnaire.
3 the questions form hierarchies.
   * Most questions are only asked under the precondition that another question has been answered in a specific way
   * "precondition" refers to a question id (plus name space, if different from default) and an answer id (if a choice question).
   * only one precondition can be given for a question.
4 questions that need to be posed as a series are usually asked in order of their definition.
   * If you want to define a question that needs to be posed before another question (it must be a question with the same precondition!), you should give it the "insertBefore" property, and specify a questionid, chapterid and namespace. The new question will then be inserted before the specified referred question in the chain.
5 Localizations can be used to add specifics for a field of research, or to add specifics for an institute or infrastructure.
6 Localizations can add new questions, or modify properties of core questions.
7 A question property specified in a localization /replaces/ that property completely.
  * If a localization needs to add experts, it should define the "addExperts" property.
  * If a localization needs to add answer options, it should define the "addAnswers" property.
  * If a localization needs to add references, it should define the "addReferences" property.
  * [We do need a way to /add/ "references" in a localization. How is this best encoded? Require syntax to "replace"?]
  * A localization can add the property "hidden": 1 to a question to remove that question and all subquestions from the questionnaire.
  * Should a localization be able to set a fixed answer to a question? An editable answer?
8 Localizations can be stacked, and extend or overwrite each others changes
9 Chapters are simply numbered. Every localization can refer to the same chapters. Chapters do not have namespaces.
    10 If two localizations both want to define a new chapter (probably rare?), that requires coordination.
11 Questions in a chapter are numbered, but within a namespace. Every localization has a namespace that differs from "core".
12 If a localization wants to add a question, it should be numbered in its own namespace.
13 If a localization wants to modify/augment a question of the core, it must explicitly mention the "core" namespace for the question.
14 Questions can have "references" and "experts".
    * "experts" on subjects are specific kinds of references with contact details. They are added in localizations; the core does not have experts.
    * references of type "weblink" provide a "url" property and an optional "anchor" property
    * references of type "dmpbook" are direct links to chapters/sections in Barend Mons' book. These may be used in the future to auto-regenerate new versions of the book
    * references of type "xref" are links to other questions of the questionnaire (note for implementation: that may be a part that is not active because a negative answer was given elsewhere. Semantics to be figured out!)
15 Questions require different types of answers. Currently foreseen are "option", "list", "string", "text"....
16 For questions of type "option":
   * a fixed number of selections are possible for the answer, presented as radio buttons to the user. The user selects one.
   * A set of radiobuttons is good because it explicitly shows wheter the user has answered a question or not.
   * The possible answers are given in the "answers" property of the question.
   * Each answer has a "label"; often "Yes" and "No", in some cases "Skip" and "Drill deeper" are used. 
   * For binary questions, the answer that does not require followup is preferred to be the first, that is a "No" or "taken care of" answer.
   * Answers have an integer "id" that is used to specify the order in which they are presented. 
   * We use "id" instead of "answerid" for brevity. Since the "answer" section is always small, there should never be confusion.
   * The "id" of the answer is also the reference for the "precondition" for a "followup" question.
   * It is a reasonable idea to have the No answer have id=0, and the yes answer id=1 for human readability.
   * [how to deal with refering to an expert?]
   * Each answer has a "responsetype" that is one of "ok", "followup" or "advice".
   * Answers of type "advice" have a "text" that will be shown if that answer is selected.
   * Only answers that have responsetype "followup" can be used as preconditions for other questions. [this may need consideration.... do we need this at all?]
17 For questions of "list" type:
   * No possible answers are given in the data model.
   * The user can type short free text items. "Add another one"....
   * Any followup questions need to be answered for each of the given free text answers.
18 For questions of type "string", "text":
   * No possible answers are given in the data model.
   * The user can type a short or long free text answer.
19 [How/when will we deal with blue arrows in the mind map? Can we make hyperlinks between different parts of the questionnaire?]
20 [In due time we can add "dmptext" attributes to answers of choice questions, with the literal text to be put in the data management plan. Other questions may require the user to type the dmptext himself]
21 [Can we/do we need to make version dependencies between the core and localizations?]
22 Does each localization require a separate file for each chapter, or can these be combined if desired?

