Ideas behind the data model

* It consists of a large core that is applicable everywhere, and localizations.
* It consists of chapters of questions that belong together
* questions form hierarchies: most questions are only asked under the precondition that another question has been answered in a specific way
* questions that need to be posed as a series are asked in order of their "order" property (an integer number).
   * If the order is not given, it is 10 times the questionid.
   * If two questions have the same order, the order in which they will be presented is undefined.
* Localizations can be used to add specifics for a field of research, or to add specifics for an institute or infrastructure.
* Localizations can add new questions, or modify properties of core questions.
* A question property specified in a localization /replaces/ that property completely.
  * [Do we need a way in which a localization can "add" an answer? Could it add a question instead? AGILE, solve it when it comes up?]
* Localizations can be stacked, and extend or overwrite each others changes
* Chapters are simply numbered. Every localization can refer to the same chapters.
* If two localizations both want to define a new chapter (probably rare?), that requires coordination.
* Questions in a chapter are numbered, but within a namespace. Every localization has a namespace that differs from "core".
* If a localization wants to add a question, it is numbered in its own namespace.
* If a localization wants to modify/augment a question of the core, it must explicitly mention the "core" namespace for the question.
* The core does not mention any experts. The "expert" property of questions is added through localization.
* Questions come in different types: "choice", ....
* For questions of type "choice" a fixed number of selections are possible for the answer.
   * The possible answers are given in the "answers" property.
   * Each answer has a "label", often "Yes" and "No", in some cases "Skip" and "Drill deeper" are used [how to deal with refering to an expert?]
   * Each answer has a "responsetype" that is one of "ok", "followup" or "advice".
   * Answers of type "advice" have a "text" that will be shown if that answer is selected.
   * Only answers that have responsetype "followup" can be used as preconditions for other questions. [this may need consideration.... do we need this at all?]
   * [Can we deal with internationalization? Does an answer need an "id" to refer to rather than a label?]
* [How/when will we deal with blue arrows in the mind map? Can we make hyperlinks between different parts of the questionnaire?]
* [In due time we can add "dmptext" attributes to answers of choice questions. Other questions may require the user to type the dmptext himself]
* [Can we/do we need to make version dependencies between the core and localizations?]
* Does each localization require a separate file for each chapter, or can these be combined if desired?

